<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.UserMapper">

    <select id="getObjectByCondition" parameterType="UserSite" resultType="UserSite">
        select * from user
            <where>
                <if test="userName != null">
                    AND userName=#{userName}
                </if>

                <if test="email != null">
                   AND email=#{email}
                </if>
            </where>
    </select>


    <update id="updateHouseRelation" parameterType="UserHouseEquipmentRelation" >
        update user_house_equipment_relation
             set name = #{name} , devid = #{devid}
        where
            equipmentMac = #{equipmentMac} and equipmentEp = #{equipmentEp}
    </update>


    <select id="getUserHostRelation" parameterType="UserHostRelation"  resultType="UserHostRelation">

        SELECT * from user_host_relation
        <where>
            <if test="mac != null">
                AND  mac = #{hostMac}
            </if>
            <if test="userId != null">
               AND userId = #{userId}
            </if>
        </where>

    </select>


    <select id="getDeviceList" parameterType="String" resultType="Device">
        select  user_house_equipment_relation.userRelationId,user_house_equipment_relation.userId,house.houseName as roomName,floor.floorName,user_house_equipment_relation.hostMac,user_house_equipment_relation.equipmentEp,user_house_equipment_relation.equipmentMac,user_house_equipment_relation.`name`,user_house_equipment_relation.devid from user_house_equipment_relation  JOIN house  on house.houseId = user_house_equipment_relation.houseId JOIN floor on house.floorId=floor.floorId  WHERE user_house_equipment_relation.userId=#{userId}
    </select>

    <select id="getDeviceWithNoNameList" parameterType="String" resultType="int">
        select count(*) from user_house_equipment_relation where (name is null or name = '') and userId = #{userId}
    </select>



    <insert id="addObjectToOauth2" parameterType="com.bean.site.UserOauth2" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users_oauth2
             (code,refreshToken,accessToken,userId,scope)
        VALUES
            (#{code},#{refreshToken},#{accessToken},#{userId},#{scope});
    </insert>

    <insert id="addUserTemp" parameterType="com.bean.SpeakerUsers" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users_temp
        (userId,createTime)
        VALUES
        (#{userId},#{createTime});
    </insert>


    <select id="getUsersTemp" parameterType="String" resultType="com.bean.SpeakerUsers">
        select * from users_temp;
    </select>



    <select id="getOauth2ByCondition" parameterType="com.bean.site.UserOauth2" resultType="com.bean.site.UserOauth2">
        select * from users_oauth2
        <where>
            <if test="refreshToken != null and refreshToken != '' ">
                AND refreshToken = #{refreshToken}
            </if>

            <if test="accessToken != null and accessToken != '' ">
                AND accessToken = #{accessToken}
            </if>

            <if test="userId != null and userId != '' ">
                AND userId = #{userId}
            </if>

            <if test="code != null and code != '' ">
                 AND code = #{code}
            </if>
        </where>
    </select>

</mapper>